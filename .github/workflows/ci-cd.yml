name: CI/CD Pipeline
# Nom du workflow CI/CD

on:
  push:
    branches:
      - dev                    # Branche d'intégration principale
      - dev-backend/**         # Toutes les branches sous dev-backend
      - dev-frontend/**        # Toutes les branches sous dev-frontend
      - main                   # Branche de production pour le déploiement
  pull_request:
    branches:
      - dev
      - dev-backend/**
      - dev-frontend/**
      # Lance les tests lors de PR vers ces branches

jobs:
  test-backend:
    name: Test Backend
    # Ce job s'exécute si la branche est "dev" ou commence par "dev-backend"
    if: github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/heads/dev-backend')
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        # Récupère le code source du dépôt
        uses: actions/checkout@v2

      - name: Setup Node.js
        # Configure Node.js pour l'environnement CI
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies and run backend tests
        # Passe dans le dossier backend, installe les dépendances et lance les tests
        working-directory: backend
        run: |
          npm install                 # Installe les dépendances du backend
          npm run test                # Exécute les tests définis dans package.json du backend

  test-frontend:
    name: Test Frontend
    # Ce job s'exécute si la branche est "dev" ou commence par "dev-frontend"
    if: github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/heads/dev-frontend')
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        # Récupère le code source du dépôt
        uses: actions/checkout@v2

      - name: Setup Node.js
        # Configure Node.js pour l'environnement CI
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies and run frontend tests
        # Passe dans le dossier frontend, installe les dépendances et lance les tests
        working-directory: frontend/edifis-pro
        run: |
          npm install                 # Installe les dépendances du frontend
          npm run test                # Exécute les tests définis dans package.json du frontend

  deploy:
    name: Deploy to Production
    # Ce job de déploiement ne s'exécute que sur la branche main
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    steps:
      - name: Check out code
        # Récupère le code source du dépôt
        uses: actions/checkout@v2

      - name: Setup Node.js
        # Configure Node.js pour le déploiement
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Build Frontend
        # Construit l'application frontend (React)
        working-directory: frontend/edifis-pro
        run: |
          npm install                 # Installe les dépendances du frontend
          npm run build               # Compile l'application React en mode production

      - name: Build Backend (if needed)
        # Construit l'application backend, si une étape de build est nécessaire
        working-directory: backend
        run: |
          npm install                 # Installe les dépendances du backend
          npm run build               # Exécute le build du backend (s'il y en a un)

      - name: Deploy
        # Étape de déploiement simulé (ici, on archive les artefacts)
        run: |
          echo "Déploiement de l'application..."
          echo "Archivage des artefacts de build..."
          echo "Les builds sont prêts pour être déployés ou récupérés."

      - name: Upload Frontend Build Artifact
        # Archive le build du frontend pour le rendre accessible dans les Artifacts de GitHub Actions
        uses: actions/upload-artifact@v2
        with:
          name: frontend-build
          path: frontend/build

      - name: Upload Backend Artifact
        # Archive le build ou le code du backend pour le rendre accessible
        uses: actions/upload-artifact@v2
        with:
          name: backend-artifact
          path: backend
