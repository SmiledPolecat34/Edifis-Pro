@startuml
title Diagrammes de cas d'utilisation — Edifis-Pro (Global + Reset Password)

left to right direction
skinparam packageStyle rectangle
skinparam shadowing false

actor "Admin" as Admin
actor "Manager" as Manager
actor "Worker" as Worker
actor "Visiteur" as Visitor

rectangle "Backend API (Edifis-Pro)" as System {
  usecase "Se connecter (Login)" as UC_Login
  usecase "Changer son mot de passe" as UC_ChangePwd
  usecase "Mot de passe oublié" as UC_ForgotPwd
  usecase "Réinitialiser mot de passe" as UC_ResetPwd

  usecase "Gérer les utilisateurs" as UC_Users
  usecase "Gérer les chantiers" as UC_Sites
  usecase "Gérer les tâches" as UC_Tasks
  
  usecase "Consulter ses affectations" as UC_ViewAssignments
}

' Droits / Rôles
Admin --> UC_Users
Admin --> UC_Sites
Admin --> UC_Tasks

Admin --> UC_Login
Admin --> UC_ChangePwd

Manager --> UC_Sites
Manager --> UC_Tasks

Manager --> UC_ViewAssignments
Manager --> UC_Login
Manager --> UC_ChangePwd

Worker --> UC_ViewAssignments

Worker --> UC_Login
Worker --> UC_ChangePwd

Visitor --> UC_ForgotPwd
Visitor --> UC_ResetPwd

' Relations entre cas d'utilisation
UC_ForgotPwd ..> UC_ResetPwd : <<génère lien/token>>
UC_ChangePwd ..> UC_Login : <<nécessite JWT valide>>

' Notes sécurité globales
note right of System
- Validation des payloads via Joi (validator.middleware.js)
- CORS restrictif (FRONT_ORIGINS), Helmet (CSP/HSTS)
- Rate limiting (login/forgot-password), Winston logging
- JWT payload homogène: { userId, role }
end note

' ------------------------------
' Cas d'utilisation détaillé: Reset Password
' ------------------------------
rectangle "Sous-système Reset Password" as ResetFlow {
  actor "Utilisateur (public)" as PublicUser

  usecase "Forgot Password\n(POST /api/auth/forgot-password)" as UC_FP
  usecase "Reset Password\n(POST /api/auth/reset-password)" as UC_RP

  PublicUser --> UC_FP
  PublicUser --> UC_RP

  note bottom of UC_FP
  Pré-conditions:
  - Email fourni
  - Rate limit IP/email

  Scénario:
  1) Générer token fort (32 bytes) et conserver hash (SHA-256)
  2) Stocker token_hash + TTL + meta (ip, user_agent)
  3) Envoyer email (lien frontend avec token)
  4) Réponse générique (anti-énumération)

  Post-conditions:
  - Ancien token(s) invalidé(s) si existant
  end note

  note bottom of UC_RP
  Pré-conditions:
  - Token + newPassword conformes policy

  Scénario:
  1) Vérifier token_hash, TTL, non-utilisé
  2) Hacher le nouveau mot de passe (bcrypt)
  3) Mettre à jour l'utilisateur
  4) Marquer le token comme utilisé
  5) Invalider les autres tokens actifs

  Post-conditions:
  - Mot de passe tourné, token invalidé
  end note
}

@enduml
